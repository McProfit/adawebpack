# WASM runtime

COMMON_WASM_SRCS= \
ada.ads      \
a-finali.adb \
a-finali.ads \
a-tags.adb   \
a-tags.ads   \
a-unccon.ads \
a-uncdea.ads \
interfac.ads \
s-addima.adb \
s-addima.ads \
s-casuti.adb \
s-casuti.ads \
s-finmas.ads \
s-finroo.adb \
s-finroo.ads \
s-htable.adb \
s-htable.ads \
s-imgboo.adb \
s-imgboo.ads \
s-imgint.adb \
s-imgint.ads \
s-io.ads     \
s-parame.adb \
s-pooglo.adb \
s-pooglo.ads \
s-secsta.adb \
s-secsta.ads \
s-stoele.adb \
s-stoele.ads \
s-stopoo.adb \
s-stopoo.ads \
s-strhas.adb \
s-strhas.ads \
s-traent.adb \
s-traent.ads \
s-unstyp.ads \
s-valuns.adb \
s-valuns.ads \
s-valuti.adb \
s-valuti.ads \
s-wchcon.adb \
s-wchcon.ads \
s-wchcnv.adb \
s-wchcnv.ads \
s-wchjis.adb \
s-wchjis.ads \
s-wchstw.adb \
s-wchstw.ads \
unchconv.ads

#a-assert.adb \
a-assert.ads \
gnat.ads     \
g-souinf.ads \
i-cexten.ads \
s-addope.ads \
s-addope.adb \
s-atacco.adb \
s-atacco.ads \
s-arit64.ads \
s-arit64.adb \
s-exnint.ads \
s-exnint.adb \
s-exnllf.ads \
s-exnllf.adb \
s-expint.ads \
s-expint.adb \
s-explli.ads \
s-explli.adb \
s-expuns.ads \
s-expuns.adb \
s-fatflt.ads \
s-fatllf.ads \
s-fatgen.adb \
s-fatgen.ads \
s-fatsfl.ads \
s-fatlfl.ads \
s-flocon.ads \
s-fore.ads   \
s-fore.adb   \
s-imenne.adb \
s-imenne.ads \
s-imgcha.adb \
s-imgcha.ads \
s-imgenu.adb \
s-imgenu.ads \
s-imglli.adb \
s-imglli.ads \
s-imgllu.adb \
s-imgllu.ads \
s-imguns.adb \
s-imguns.ads \
s-maccod.ads \
s-powtab.ads \
s-valboo.adb \
s-valboo.ads \
s-valcha.adb \
s-valcha.ads \
s-valenu.adb \
s-valenu.ads \
s-valint.adb \
s-valint.ads \
s-vallli.adb \
s-vallli.ads \
s-valllu.adb \
s-valllu.ads \
machcode.ads \
text_io.ads  \
unchdeal.ads \
\
a-contai.ads \

#a-conhel.ads \
#a-conhel.adb \
s-atocou.ads \
s-atocou.adb \
#s-soliin.ads \
#s-soliin.adb \

COMPILABLE_WASM_SPECS= \
ada.ads      \
a-unccon.ads \
a-uncdea.ads \
interfac.ads \
system.ads   \
s-unstyp.ads \
unchconv.ads \

#gnat.ads     \
g-souinf.ads \
i-c.ads      \
i-cexten.ads \
s-atacco.ads \
s-fatflt.ads \
s-fatllf.ads \
s-fatlfl.ads \
s-fatsfl.ads \
s-maccod.ads \
s-powtab.ads \
machcode.ads \
text_io.ads  \
unchdeal.ads \
\
a-contai.ads \

COMPILE+=--target=wasm32 -gnateT=../../../adawebpack_src/source/rtl/wasm32.atp
AWP_SRC=adawebpack_src/source

WASMINCLUDE=lib/rts-native/adainclude
WASMLIB=lib/rts-native/adalib

wasm: build
	$(RMDIR) $(WASMINCLUDE) $(WASMLIB)
	$(MKDIR) $(WASMINCLUDE) $(WASMLIB)
	for f in $(COMMON_WASM_SRCS); do \
	  cp -p $(GNAT_SRC)/libgnat/$$f $(WASMINCLUDE); \
	done
	cp -p $(AWP_SRC)/rtl/a-elchha__wasm.adb $(WASMINCLUDE)/a-elchha.adb
	cp -p $(GNAT_SRC)/hie/a-elchha__zfp.ads $(WASMINCLUDE)/a-elchha.ads
	cp -p $(GNAT_SRC)/hie/a-except__zfp.adb $(WASMINCLUDE)/a-except.adb
	cp -p $(GNAT_SRC)/hie/a-except__zfp.ads $(WASMINCLUDE)/a-except.ads
#	cp -p $(GNAT_SRC)/hie/i-c__hie.ads $(WASMINCLUDE)/i-c.ads
	cp -p $(AWP_SRC)/rtl/system-wasm.ads $(WASMINCLUDE)/system.ads
#	cp -p $(GNAT_SRC)/hie/s-assert__c.ads $(WASMINCLUDE)/s-assert.ads
#	cp -p $(GNAT_SRC)/hie/s-assert__xi.adb $(WASMINCLUDE)/s-assert.adb
	cp -p $(AWP_SRC)/rtl/s-finmas__wasm.adb $(WASMINCLUDE)/s-finmas.adb
	cp -p $(AWP_SRC)/rtl/s-io__wasm.adb $(WASMINCLUDE)/s-io.adb
	cp -p $(AWP_SRC)/rtl/s-init.ads $(WASMINCLUDE)/
	cp -p $(AWP_SRC)/rtl/s-init.adb $(WASMINCLUDE)/
	cp -p $(GNAT_SRC)/hie/s-memcom.ad[sb] $(WASMINCLUDE)/
	cp -p $(GNAT_SRC)/hie/s-memcop.ad[sb] $(WASMINCLUDE)/
	cp -p $(GNAT_SRC)/hie/s-memmov.ad[sb] $(WASMINCLUDE)/
	cp -p $(AWP_SRC)/rtl/s-memory__wasm.adb $(WASMINCLUDE)/s-memory.adb
	cp -p $(GNAT_SRC)/hie/s-memory__cert.ads $(WASMINCLUDE)/s-memory.ads
	cp -p $(GNAT_SRC)/hie/s-memset.ad[sb] $(WASMINCLUDE)/
	cp -p $(GNAT_SRC)/hie/s-memtyp.ad[sb] $(WASMINCLUDE)/
	cp -p $(AWP_SRC)/rtl/s-parame__wasm.ads $(WASMINCLUDE)/s-parame.ads
	cp -p $(AWP_SRC)/rtl/s-soflin__wasm.adb $(WASMINCLUDE)/s-soflin.adb
	cp -p $(AWP_SRC)/rtl/s-soflin__wasm.ads $(WASMINCLUDE)/s-soflin.ads
	cp -p $(GNAT_SRC)/hie/s-sssita.ad[sb] $(WASMINCLUDE)/
	cp -p $(GNAT_SRC)/hie/s-stalib__raven.adb $(WASMINCLUDE)/s-stalib.adb
	cp -p $(GNAT_SRC)/hie/s-stalib__raven.ads $(WASMINCLUDE)/s-stalib.ads
#	cp -p $(GNAT_SRC)/libgnat/s-flocon__none.adb $(WASMINCLUDE)/s-flocon.adb
	cd $(WASMLIB) && for f in $(COMPILABLE_WASM_SPECS); do \
	  echo ">>> Compile $$f"; \
	  $(COMPILE) ../adainclude/$$f || exit 1; \
	done
	cd $(WASMLIB) && for f in ../adainclude/*.adb; do \
	  echo "<<< Compile $$f"; \
	  if [ $$f != '../adainclude/a-excach.adb' ]; then $(COMPILE) $$f || exit 1; fi \
	done
	cd $(WASMLIB) && $(CHMOD) a-wx *.ali && $(AR) libgnat.a *.o && llvm-ranlib libgnat.a && $(RM) *.o

